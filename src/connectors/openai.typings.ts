/**
 * The file is generated by SPADAR CLI v. 0.1.0-alpha.1
 * DO NOT EDIT IT MANUALLY because it could be automatically rewritten
 **/

import * as I from '../types'

export type Keys = {
  OPENAI_API_KEY: string
}

export type Options = {
  model: 'gpt-4' | 'gpt-4-0314' | 'gpt-4-0613' | 'gpt-4-32k' | 'gpt-4-32k-0314' | 'gpt-4-32k-0613' | 'gpt-3.5-turbo' | 'gpt-3.5-turbo-16k' | 'gpt-3.5-turbo-0301' | 'gpt-3.5-turbo-0613' | 'gpt-3.5-turbo-16k-0613'
  temperature: number
  topP: number
  maxTokens: number
}

export type ChatMessageUnit = {
  unitId: 'chatMessage'
  role: 'system' | 'assistant' | 'user'
  payload: string
}

export type Connector = {
  textToText: {
    chatMessageArr: {
      /* chatMessageArr -> stringStream;  */
      stringStream: (keys: Keys, options: Options, unit: ChatMessageUnit[]) => Promise<I.StreamOf<string>>
    }
    string: {
      /* string -> string;  */
      string: (keys: Keys, options: Options, unit: string) => Promise<string>
    }
  }
}

export default Connector