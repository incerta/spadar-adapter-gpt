/**
 * The file is generated by SPADAR CLI v. 0.1.0-alpha.1
 * DO NOT EDIT IT MANUALLY because it could be automatically rewritten
 **/

import Connector from './openai.typings'

/**
 * The Connector API signature file exists as an intermediate
 * step between the connector typings and the actual connector
 * that SHOULD BE edited by the user MANUALLY.
 *
 * Whenever the schema is changed and the user regenerates the connector
 * typings/signatures, the existing connector API files
 * MUST BE untouched by the code generation.
 *
 * We view the connector API that is filled in by the user manually as a bunch
 * of mutations of the signature object. From the Typescript
 * standpoint, these mutations are not required, so we need a way
 * to check which parts of the schema are actually implemented
 * and omit them from the resulting Adapter API.
 **/
const signFn = <
  T extends ((...args: unknown[]) => unknown) & { isSpadarSignature?: boolean }
>(
  x: T
): T & { isSpadarSignature?: boolean } => {
  x.isSpadarSignature = true
  return x
}

export const signature: Connector = {
  textToText: {
    chatMessageArr: {
      /* chatMessageArr -> stringStream;  */
      stringStream: signFn(() => {
        throw new Error('Not implemented')
      }),
    },
    string: {
      /* string -> string;  */
      string: signFn(() => {
        throw new Error('Not implemented')
      }),
    },
  }
}

export default signature